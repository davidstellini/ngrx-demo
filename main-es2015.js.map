{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/feed/feed.module.ts","./src/app/feed/feed/feed.component.ts","./src/app/feed/feed/feed.component.html","./src/app/feed/games/services/games.backend.ts","./src/app/feed/games/services/games.facade.ts","./src/app/feed/games/store/action-type.ts","./src/app/feed/games/store/action.ts","./src/app/feed/games/store/effect.ts","./src/app/feed/games/store/reducer.ts","./src/app/feed/games/store/selector.ts","./src/app/feed/jackpots/services/jackpots.backend.ts","./src/app/feed/jackpots/services/jackpots.facade.ts","./src/app/feed/jackpots/store/action-type.ts","./src/app/feed/jackpots/store/action.ts","./src/app/feed/jackpots/store/effect.ts","./src/app/feed/jackpots/store/reducer.ts","./src/app/feed/jackpots/store/selector.ts","./src/app/feed/store/effect.ts","./src/app/feed/store/reducer.ts","./src/app/feed/store/selector.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,aAAa,CAAC;KACvB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,sEAAqB;QACrB,2EAA+B;;6FDMlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACL;AACiB;AACb;AACE;AACQ;;;;;AAmBjD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAZJ;YACP,uEAAa;YACb,qEAAgB;YAChB,oEAAgB;YAEhB,uDAAW,CAAC,OAAO,CAAC,EAAE,CAAC;YACvB,2DAAa,CAAC,OAAO,CAAC,EAAE,CAAC;YACzB,mCAAmC;YACnC,wEAAmB,CAAC,UAAU,EAAE;YAEhC,4DAAU;SACX;mIAIU,SAAS,mBAhBL,2DAAY,aAEzB,uEAAa;QACb,qEAAgB;QAChB,oEAAgB,0MAOhB,4DAAU;6FAKD,SAAS;cAjBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,2DAAY,CAAC;gBAC5B,OAAO,EAAE;oBACP,uEAAa;oBACb,qEAAgB;oBAChB,oEAAgB;oBAEhB,uDAAW,CAAC,OAAO,CAAC,EAAE,CAAC;oBACvB,2DAAa,CAAC,OAAO,CAAC,EAAE,CAAC;oBACzB,mCAAmC;oBACnC,wEAAmB,CAAC,UAAU,EAAE;oBAEhC,4DAAU;iBACX;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACL;AACI;AACC;AACF;AACS;;;;AAW/C,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBAPZ;YACP,4DAAY;YACZ,uDAAW,CAAC,UAAU,CAAC,MAAM,EAAE,2DAAY,CAAC;YAC5C,2DAAa,CAAC,UAAU,CAAC,yDAAW,CAAC;SACtC;mIAGU,UAAU,mBARN,kEAAa,aAE1B,4DAAY,iJAIJ,kEAAa;6FAEZ,UAAU;cATtB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,kEAAa,CAAC;gBAC7B,OAAO,EAAE;oBACP,4DAAY;oBACZ,uDAAW,CAAC,UAAU,CAAC,MAAM,EAAE,2DAAY,CAAC;oBAC5C,2DAAa,CAAC,UAAU,CAAC,yDAAW,CAAC;iBACtC;gBACD,OAAO,EAAE,CAAC,kEAAa,CAAC;aACzB;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACV;AACqB;AACS;;;;;;ICAlE,qEACE;IAAA,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,+KACF;;ADKG,MAAM,aAAa;IAKxB,YACU,WAAwB,EACxB,cAA8B;QAD9B,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QANxC,sBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CACzD,6DAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAC3B,CAAC;IAKC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QAC9B,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;IACtC,CAAC;;0EAbU,aAAa;6FAAb,aAAa;QCV1B,sEACE;QAAA,qEAAI;QAAA,8EAAmB;QAAA,4DAAK;QAC5B,qEACE;QAAA,uGACE;;QAEJ,4DAAK;QACP,4DAAM;;QAJE,0DAA8C;QAA9C,2JAA8C;;6FDOzC,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAA2C;AACO;AACiB;;;AAK5D,MAAM,YAAY;IAGvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,aAAQ,GAAG,qEAAW,CAAC,OAAO,GAAG,YAAY,CAAC;QAI9C,aAAQ,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAFP,CAAC;;wEAH7B,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACP;AACY;AACH;AAEW;;;AAKjD,MAAM,WAAW;IAItB,YAAoB,KAAyB;QAAzB,UAAK,GAAL,KAAK,CAAoB;QAH7C,WAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,2DAAW,CAAC,CAAC;QACxC,sBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gEAAgB,CAAC,CAAC;IAER,CAAC;IAEjD,UAAU;QACR,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gEAAU,EAAE,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;;sEATU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAO,MAAM,UAAU,GAAG,aAAa,CAAC;AACjC,MAAM,iBAAiB,GAAG,qBAAqB,CAAC;AAChD,MAAM,cAAc,GAAG,kBAAkB,CAAC;;;;;;;;;;;;;ACFjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC4B;AAGvE,MAAM,UAAU,GAAG,gEAAY,CAAC,uDAAU,CAAC,CAAC;AAC5C,MAAM,iBAAiB,GAAG,gEAAY,CAC3C,8DAAiB,EACjB,yDAAK,EAAuB,CAC7B,CAAC;AACK,MAAM,cAAc,GAAG,gEAAY,CACxC,2DAAc,EACd,yDAAK,EAAuB,CAC7B,CAAC;;;;;;;;;;;;;ACZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACmB;AACL;AACG;AACa;AAC/C;;;;AAInB,MAAM,YAAY;IACvB,YAAoB,QAAiB,EAAU,YAA0B;QAArD,aAAQ,GAAR,QAAQ,CAAS;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAEzE,gBAAW,GAAG,kEAAY,CAAC,GAAG,EAAE,CAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,4DAAM,CAAC,kDAAU,CAAC,EAClB,gEAAS,CAAC,GAAG,EAAE,CACb,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,IAAI,CAC/B,0DAAG,CAAC,CAAC,KAAa,EAAE,EAAE,CACpB,iEAAiB,CAAC;YAChB,OAAO,EAAE,KAAK;SACf,CAAC,CACH,EACD,iEAAU,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,+CAAE,CAAC,8DAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CACjD,CACF,CACF,CACF,CAAC;IAhB0E,CAAC;;wEADlE,YAAY;+FAAZ,YAAY,WAAZ,YAAY;6FAAZ,YAAY;cADxB,wDAAU;;;;;;;;;;;;;;ACRX;AAAA;AAAA;AAAA;AAAgD;AAO9B;AAKlB,MAAM,YAAY,GAAe;IAC/B,IAAI,EAAE,EAAE;IACR,MAAM,EAAE,KAAK;IACb,OAAO,EAAE,KAAK;IACd,KAAK,EAAE,IAAI;CACZ,CAAC;AAEF,MAAM,YAAY,GAAG,iEAAa,CAChC,YAAY,EACZ,sDAAE,CAAC,kDAAU,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,iCACrB,YAAY,KACf,OAAO,EAAE,IAAI,IACb,CAAC,EACH,sDAAE,CAAC,yDAAiB,EAAE,CAAC,KAAK,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,iCACzC,KAAK,KACR,IAAI,EAAE,OAAO,EACb,OAAO,EAAE,KAAK,EACd,MAAM,EAAE,IAAI,IACZ,CAAC,EACH,sDAAE,CAAC,sDAAc,EAAE,CAAC,KAAK,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,iCACtC,KAAK,KACR,KAAK,EAAE,OAAO,IACd,CAAC,CACJ,CAAC;AAEK,MAAM,OAAO,GAAG,CAAC,KAAiB,EAAE,MAAuB,EAAE,EAAE,CACpE,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;;;;;;;;;;;;ACpC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AAE7C,MAAM,gBAAgB,GAAG,CAAC,KAAkB,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;AAE3D,MAAM,WAAW,GAAG,kEAAc,CACvC,gBAAgB,EAChB,CAAC,KAAiB,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAClC,CAAC;AACK,MAAM,kBAAkB,GAAG,kEAAc,CAC9C,gBAAgB,EAChB,CAAC,KAAiB,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,CACrC,CAAC;AACK,MAAM,iBAAiB,GAAG,kEAAc,CAC7C,gBAAgB,EAChB,CAAC,KAAiB,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,CACpC,CAAC;AACK,MAAM,gBAAgB,GAAG,kEAAc,CAC5C,gBAAgB,EAChB,CAAC,KAAiB,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CACnC,CAAC;;;;;;;;;;;;;ACrBF;AAAA;AAAA;AAAA;AAAA;AAA2C;AACO;AACiB;;;AAK5D,MAAM,eAAe;IAG1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,gBAAW,GAAG,qEAAW,CAAC,OAAO,GAAG,eAAe,CAAC;QAIpD,gBAAW,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAFb,CAAC;;8EAH7B,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACP;AACe;AACH;;;AAMzC,MAAM,cAAc;IAGzB,YAAoB,KAAyB;QAAzB,UAAK,GAAL,KAAK,CAAoB;QAF7C,cAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,8DAAc,CAAC,CAAC;IAEE,CAAC;IAEjD,aAAa;QACX,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,mEAAa,EAAE,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;;4EARU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAO,MAAM,aAAa,GAAG,gBAAgB,CAAC;AACvC,MAAM,oBAAoB,GAAG,wBAAwB,CAAC;AACtD,MAAM,iBAAiB,GAAG,qBAAqB,CAAC;;;;;;;;;;;;;ACFvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAK3B;AAGhB,MAAM,aAAa,GAAG,gEAAY,CAAC,0DAAa,CAAC,CAAC;AAClD,MAAM,oBAAoB,GAAG,gEAAY,CAC9C,iEAAoB,EACpB,yDAAK,EAA0B,CAChC,CAAC;AACK,MAAM,iBAAiB,GAAG,gEAAY,CAC3C,8DAAiB,EACjB,yDAAK,EAAuB,CAC7B,CAAC;;;;;;;;;;;;;AChBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACmB;AACC;AACH;AAK1C;AACQ;;;;AAInB,MAAM,eAAe;IAC1B,YACU,QAAiB,EACjB,eAAgC;QADhC,aAAQ,GAAR,QAAQ,CAAS;QACjB,oBAAe,GAAf,eAAe,CAAiB;QAG1C,mBAAc,GAAG,kEAAY,CAAC,GAAG,EAAE,CACjC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,4DAAM,CAAC,qDAAa,CAAC,EACrB,gEAAS,CAAC,GAAG,EAAE,CACb,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,IAAI,CACrC,0DAAG,CAAC,CAAC,QAAmB,EAAE,EAAE,CAC1B,oEAAoB,CAAC;YACnB,OAAO,EAAE,QAAQ;SAClB,CAAC,CACH,EACD,iEAAU,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,+CAAE,CAAC,iEAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CACpD,CACF,CACF,CACF,CAAC;IAhBC,CAAC;;8EAJO,eAAe;kGAAf,eAAe,WAAf,eAAe;6FAAf,eAAe;cAD3B,wDAAU;;;;;;;;;;;;;;ACZX;AAAA;AAAA;AAAA;AAAgD;AAO9B;AAKlB,MAAM,YAAY,GAAkB;IAClC,IAAI,EAAE,EAAE;IACR,MAAM,EAAE,KAAK;IACb,OAAO,EAAE,KAAK;IACd,KAAK,EAAE,IAAI;CACZ,CAAC;AAEF,MAAM,eAAe,GAAG,iEAAa,CACnC,YAAY,EACZ,sDAAE,CAAC,qDAAa,EAAE,GAAG,EAAE,CAAC,iCACnB,YAAY,KACf,OAAO,EAAE,IAAI,IACb,CAAC,EACH,sDAAE,CAAC,4DAAoB,EAAE,CAAC,KAAK,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,iCAC5C,KAAK,KACR,IAAI,EAAE,OAAO,EACb,OAAO,EAAE,KAAK,EACd,MAAM,EAAE,IAAI,IACZ,CAAC,EACH,sDAAE,CAAC,yDAAiB,EAAE,CAAC,KAAK,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,iCACzC,KAAK,KACR,KAAK,EAAE,OAAO,IACd,CAAC,CACJ,CAAC;AAEK,MAAM,OAAO,GAAG,CAAC,KAAoB,EAAE,MAA0B,EAAE,EAAE,CAC1E,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;;;;;;;;;;;;ACpCjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AAE7C,MAAM,mBAAmB,GAAG,CAAC,KAAkB,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;AAEjE,MAAM,cAAc,GAAG,kEAAc,CAC1C,mBAAmB,EACnB,CAAC,KAAoB,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CACrC,CAAC;AACK,MAAM,qBAAqB,GAAG,kEAAc,CACjD,mBAAmB,EACnB,CAAC,KAAoB,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,CACxC,CAAC;AACK,MAAM,oBAAoB,GAAG,kEAAc,CAChD,mBAAmB,EACnB,CAAC,KAAoB,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,CACvC,CAAC;AACK,MAAM,mBAAmB,GAAG,kEAAc,CAC/C,mBAAmB,EACnB,CAAC,KAAoB,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CACtC,CAAC;;;;;;;;;;;;;ACrBF;AAAA;AAAA;AAAA;AAAqD;AACM;AAEpD,MAAM,WAAW,GAAG,CAAC,gEAAY,EAAE,sEAAe,CAAC,CAAC;;;;;;;;;;;;;ACD3D;AAAA;AAAA;AAAA;AAAgD;AAEM;AAQ/C,SAAS,YAAY;IAC1B,OAAO;QACL,KAAK,EAAE,4DAAa;QACpB,QAAQ,EAAE,+DAAgB;KAC3B,CAAC;AACJ,CAAC;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAA;AAAA;AAA6C;AACS;AACM;AAMrD,MAAM,gBAAgB,GAAG,kEAAc,CAC5C,iEAAW,EACX,uEAAc,EACd,CAAC,KAAK,EAAE,QAAQ,EAAqB,EAAE;IACrC,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;QACxB,MAAM,eAAe,GAAG,QAAQ,CAAC,IAAI,CACnC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE,CACtC,CAAC;QAEF,uCACK,IAAI,KACP,aAAa,EAAE,CAAC,eAAe,IAAI,eAAe,CAAC,MAAM,CAAC,IAAI,IAAI,IAClE;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CACF,CAAC;;;;;;;;;;;;;ACrBF;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAsB;IAC5C,UAAU,EAAE,KAAK;IACjB,OAAO,EAAE,0CAA0C;CACpD,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AClBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBACN,CAAC,0DAAU;KAC1B,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'casino-demo';\n}\n","<app-feed></app-feed>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\nimport { FeedModule } from './feed/feed.module';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot([]),\n    // todo: Add devtools only for dev.\n    StoreDevtoolsModule.instrument(),\n\n    FeedModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { feedReducers } from './store/reducer';\nimport { feedEffects } from './store/effect';\nimport { FeedComponent } from './feed/feed.component';\n\n@NgModule({\n  declarations: [FeedComponent],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature('feed', feedReducers),\n    EffectsModule.forFeature(feedEffects),\n  ],\n  exports: [FeedComponent],\n})\nexport class FeedModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { filter } from 'rxjs/operators';\nimport { GamesFacade } from '../games/services/games.facade';\nimport { JackpotsFacade } from '../jackpots/services/jackpots.facade';\n\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.scss'],\n})\nexport class FeedComponent implements OnInit {\n  gamesWithJackpot$ = this.gamesFacade.gamesWithJackpot$.pipe(\n    filter((games) => !!games)\n  );\n\n  constructor(\n    private gamesFacade: GamesFacade,\n    private jackpotsFacade: JackpotsFacade\n  ) {}\n\n  ngOnInit() {\n    this.gamesFacade.fetchGames();\n    this.jackpotsFacade.fetchJackpots();\n  }\n}\n","<div>\n  <h1>Games with Jackpots</h1>\n  <ul>\n    <li *ngFor=\"let game of gamesWithJackpot$ | async\">\n      {{ game?.name }} - {{ game?.jackpotAmount || 0 }}\n    </li>\n  </ul>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GamesBackend {\n  gamesUrl = environment.baseUrl + '/games.php';\n\n  constructor(private http: HttpClient) {}\n\n  getGames = () => this.http.get(this.gamesUrl);\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { selectGames } from '../store/selector';\nimport { fetchGames } from '../store/action';\nimport { GlobalState } from '../../../model';\nimport { gamesWithJackpot } from '../../store/selector';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GamesFacade {\n  games$ = this.store.select(selectGames);\n  gamesWithJackpot$ = this.store.select(gamesWithJackpot);\n\n  constructor(private store: Store<GlobalState>) {}\n\n  fetchGames() {\n    this.store.dispatch(fetchGames());\n    return this.games$;\n  }\n}\n","export const FetchGames = 'FETCH_GAMES';\nexport const FetchGamesSuccess = 'FETCH_GAMES_SUCCESS';\nexport const FetchGamesFail = 'FETCH_GAMES_FAIL';\n","import { createAction, props } from '@ngrx/store';\nimport { FetchGames, FetchGamesFail, FetchGamesSuccess } from './action-type';\nimport { Game } from '../model';\n\nexport const fetchGames = createAction(FetchGames);\nexport const fetchGamesSuccess = createAction(\n  FetchGamesSuccess,\n  props<{ payload: Game[] }>()\n);\nexport const fetchGamesFail = createAction(\n  FetchGamesFail,\n  props<{ payload: string }>()\n);\n\nexport type GamesActionType =\n  | typeof fetchGames\n  | typeof fetchGamesSuccess\n  | typeof fetchGamesFail;\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { GamesBackend } from '../services/games.backend';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { fetchGames, fetchGamesFail, fetchGamesSuccess } from './action';\nimport { of } from 'rxjs';\nimport { Game } from '../model';\n\n@Injectable()\nexport class GamesEffects {\n  constructor(private actions$: Actions, private gamesBackend: GamesBackend) {}\n\n  fetchGames$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(fetchGames),\n      switchMap(() =>\n        this.gamesBackend.getGames().pipe(\n          map((games: Game[]) =>\n            fetchGamesSuccess({\n              payload: games,\n            })\n          ),\n          catchError((error) => of(fetchGamesFail(error)))\n        )\n      )\n    )\n  );\n}\n","import { createReducer, on } from '@ngrx/store';\nimport { Game } from '../model';\nimport {\n  fetchGames,\n  fetchGamesFail,\n  fetchGamesSuccess,\n  GamesActionType,\n} from './action';\nimport { StateSlice } from '../../../model';\n\nexport type GamesState = StateSlice<Game>;\n\nconst initialState: GamesState = {\n  data: [],\n  loaded: false,\n  loading: false,\n  error: null,\n};\n\nconst gamesReducer = createReducer(\n  initialState,\n  on(fetchGames, (state) => ({\n    ...initialState,\n    loading: true,\n  })),\n  on(fetchGamesSuccess, (state, { payload }) => ({\n    ...state,\n    data: payload,\n    loading: false,\n    loaded: true,\n  })),\n  on(fetchGamesFail, (state, { payload }) => ({\n    ...state,\n    error: payload,\n  }))\n);\n\nexport const reducer = (state: GamesState, action: GamesActionType) =>\n  gamesReducer(state, action);\n","import { GamesState } from './reducer';\nimport { GlobalState } from '../../../model';\nimport { createSelector } from '@ngrx/store';\n\nconst selectGamesState = (state: GlobalState) => state.feed.games;\n\nexport const selectGames = createSelector(\n  selectGamesState,\n  (state: GamesState) => state.data\n);\nexport const selectGamesLoading = createSelector(\n  selectGamesState,\n  (state: GamesState) => state.loading\n);\nexport const selectGamesLoaded = createSelector(\n  selectGamesState,\n  (state: GamesState) => state.loaded\n);\nexport const selectGamesError = createSelector(\n  selectGamesState,\n  (state: GamesState) => state.error\n);\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JackpotsBackend {\n  jackpotsUrl = environment.baseUrl + '/jackpots.php';\n\n  constructor(private http: HttpClient) {}\n\n  getJackpots = () => this.http.get(this.jackpotsUrl);\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { selectJackpots } from '../store/selector';\nimport { fetchJackpots } from '../store/action';\nimport { GlobalState } from '../../../model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JackpotsFacade {\n  jackpots$ = this.store.select(selectJackpots);\n\n  constructor(private store: Store<GlobalState>) {}\n\n  fetchJackpots() {\n    this.store.dispatch(fetchJackpots());\n    return this.jackpots$;\n  }\n}\n","export const FetchJackpots = 'FETCH_JACKPOTS';\nexport const FetchJackpotsSuccess = 'FETCH_JACKPOTS_SUCCESS';\nexport const FetchJackpotsFail = 'FETCH_JACKPOTS_FAIL';\n","import { createAction, props } from '@ngrx/store';\nimport {\n  FetchJackpots,\n  FetchJackpotsFail,\n  FetchJackpotsSuccess,\n} from './action-type';\nimport { Jackpot } from '../model';\n\nexport const fetchJackpots = createAction(FetchJackpots);\nexport const fetchJackpotsSuccess = createAction(\n  FetchJackpotsSuccess,\n  props<{ payload: Jackpot[] }>()\n);\nexport const fetchJackpotsFail = createAction(\n  FetchJackpotsFail,\n  props<{ payload: string }>()\n);\n\nexport type JackpotsActionType =\n  | typeof fetchJackpots\n  | typeof fetchJackpotsSuccess\n  | typeof fetchJackpotsFail;\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { JackpotsBackend } from '../services/jackpots.backend';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport {\n  fetchJackpots,\n  fetchJackpotsFail,\n  fetchJackpotsSuccess,\n} from './action';\nimport { of } from 'rxjs';\nimport { Jackpot } from '../model';\n\n@Injectable()\nexport class JackpotsEffects {\n  constructor(\n    private actions$: Actions,\n    private jackpotsBackend: JackpotsBackend\n  ) {}\n\n  fetchJackpots$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(fetchJackpots),\n      switchMap(() =>\n        this.jackpotsBackend.getJackpots().pipe(\n          map((jackpots: Jackpot[]) =>\n            fetchJackpotsSuccess({\n              payload: jackpots,\n            })\n          ),\n          catchError((error) => of(fetchJackpotsFail(error)))\n        )\n      )\n    )\n  );\n}\n","import { createReducer, on } from '@ngrx/store';\nimport { Jackpot } from '../model';\nimport {\n  fetchJackpots,\n  fetchJackpotsFail,\n  fetchJackpotsSuccess,\n  JackpotsActionType,\n} from './action';\nimport { StateSlice } from '../../../model';\n\nexport type JackpotsState = StateSlice<Jackpot>;\n\nconst initialState: JackpotsState = {\n  data: [],\n  loaded: false,\n  loading: false,\n  error: null,\n};\n\nconst jackpotsReducer = createReducer(\n  initialState,\n  on(fetchJackpots, () => ({\n    ...initialState,\n    loading: true,\n  })),\n  on(fetchJackpotsSuccess, (state, { payload }) => ({\n    ...state,\n    data: payload,\n    loading: false,\n    loaded: true,\n  })),\n  on(fetchJackpotsFail, (state, { payload }) => ({\n    ...state,\n    error: payload,\n  }))\n);\n\nexport const reducer = (state: JackpotsState, action: JackpotsActionType) =>\n  jackpotsReducer(state, action);\n","import { JackpotsState } from './reducer';\nimport { GlobalState } from '../../../model';\nimport { createSelector } from '@ngrx/store';\n\nconst selectJackpotsState = (state: GlobalState) => state.feed.jackpots;\n\nexport const selectJackpots = createSelector(\n  selectJackpotsState,\n  (state: JackpotsState) => state.data\n);\nexport const selectJackpotsLoading = createSelector(\n  selectJackpotsState,\n  (state: JackpotsState) => state.loading\n);\nexport const selectJackpotsLoaded = createSelector(\n  selectJackpotsState,\n  (state: JackpotsState) => state.loaded\n);\nexport const selectJackpotsError = createSelector(\n  selectJackpotsState,\n  (state: JackpotsState) => state.error\n);\n","import { GamesEffects } from '../games/store/effect';\nimport { JackpotsEffects } from '../jackpots/store/effect';\n\nexport const feedEffects = [GamesEffects, JackpotsEffects];\n","import { ActionReducerMap } from '@ngrx/store';\n\nimport * as games from '../games/store/reducer';\nimport { GamesState } from '../games/store/reducer';\nimport * as jackpots from '../jackpots/store/reducer';\nimport { JackpotsState } from '../jackpots/store/reducer';\n\nexport interface FeedState {\n  games: GamesState;\n  jackpots: JackpotsState;\n}\n\nexport function feedReducers(): ActionReducerMap<FeedState, any> {\n  return {\n    games: games.reducer,\n    jackpots: jackpots.reducer,\n  };\n}\n","import { createSelector } from '@ngrx/store';\nimport { selectGames } from '../games/store/selector';\nimport { selectJackpots } from '../jackpots/store/selector';\nimport { Game } from '../games/model';\n\nexport interface GameWithJackpot extends Game {\n  jackpotAmount: number | null;\n}\nexport const gamesWithJackpot = createSelector(\n  selectGames,\n  selectJackpots,\n  (games, jackpots): GameWithJackpot[] => {\n    return games.map((game) => {\n      const gameWithJackpot = jackpots.find(\n        (jackpot) => jackpot.game === game.id\n      );\n\n      return {\n        ...game,\n        jackpotAmount: (gameWithJackpot && gameWithJackpot.amount) || null,\n      };\n    });\n  }\n);\n","import { EnvironmentsModel } from './environments.model';\n\n// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment: EnvironmentsModel = {\n  production: false,\n  baseUrl: 'http://stage.whgstage.com/front-end-test',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}