{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/feed/feed.module.ts","webpack:///src/app/feed/feed/feed.component.ts","webpack:///src/app/feed/feed/feed.component.html","webpack:///src/app/feed/games/services/games.backend.ts","webpack:///src/app/feed/games/services/games.facade.ts","webpack:///src/app/feed/games/store/action-type.ts","webpack:///src/app/feed/games/store/action.ts","webpack:///src/app/feed/games/store/effect.ts","webpack:///src/app/feed/games/store/reducer.ts","webpack:///src/app/feed/games/store/selector.ts","webpack:///src/app/feed/jackpots/services/jackpots.backend.ts","webpack:///src/app/feed/jackpots/services/jackpots.facade.ts","webpack:///src/app/feed/jackpots/store/action-type.ts","webpack:///src/app/feed/jackpots/store/action.ts","webpack:///src/app/feed/jackpots/store/effect.ts","webpack:///src/app/feed/jackpots/store/reducer.ts","webpack:///src/app/feed/jackpots/store/selector.ts","webpack:///src/app/feed/store/effect.ts","webpack:///src/app/feed/store/reducer.ts","webpack:///src/app/feed/store/selector.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","instrument","declarations","providers","bootstrap","FeedModule","forFeature","FeedComponent","gamesFacade","jackpotsFacade","gamesWithJackpot$","pipe","games","fetchGames","fetchJackpots","GamesBackend","http","gamesUrl","baseUrl","getGames","get","providedIn","GamesFacade","store","games$","select","dispatch","FetchGames","FetchGamesSuccess","FetchGamesFail","fetchGamesSuccess","fetchGamesFail","GamesEffects","actions$","gamesBackend","fetchGames$","payload","error","initialState","data","loaded","loading","gamesReducer","state","reducer","action","selectGamesState","feed","selectGames","selectGamesLoading","selectGamesLoaded","selectGamesError","JackpotsBackend","jackpotsUrl","getJackpots","JackpotsFacade","jackpots$","FetchJackpots","FetchJackpotsSuccess","FetchJackpotsFail","fetchJackpotsSuccess","fetchJackpotsFail","JackpotsEffects","jackpotsBackend","fetchJackpots$","jackpots","jackpotsReducer","selectJackpotsState","selectJackpots","selectJackpotsLoading","selectJackpotsLoaded","selectJackpotsError","feedEffects","feedReducers","gamesWithJackpot","map","game","gameWithJackpot","find","jackpot","jackpotAmount","amount","environment","production","err","console"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,6CAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACT7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaM,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,aAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;AACA;;;;;;;;;sEDMaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA4BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAZJ,CACP,uEADO,EAEP,qEAFO,EAGP,oEAHO,EAKP,wDAAYP,OAAZ,CAAoB,EAApB,CALO,EAMP,4DAAcA,OAAd,CAAsB,EAAtB,CANO,EAOP;AACA,+EAAoBQ,UAApB,EARO,EAUP,4DAVO,CAYI;;;;0HAGFD,S,EAAS;AAAA,uBAhBL,2DAgBK;AAhBO,kBAEzB,uEAFyB,EAGzB,qEAHyB,EAIzB,oEAJyB,EAIT,2DAJS,EAIT,+DAJS,EAIT,wEAJS,EAWzB,4DAXyB;AAgBP,O;AALR,K;;;;;sEAKDA,S,EAAS;cAjBrB,sDAiBqB;eAjBZ;AACRE,sBAAY,EAAE,CAAC,2DAAD,CADN;AAERR,iBAAO,EAAE,CACP,uEADO,EAEP,qEAFO,EAGP,oEAHO,EAKP,wDAAYD,OAAZ,CAAoB,EAApB,CALO,EAMP,4DAAcA,OAAd,CAAsB,EAAtB,CANO,EAOP;AACA,mFAAoBQ,UAApB,EARO,EAUP,4DAVO,CAFD;AAcRE,mBAAS,EAAE,EAdH;AAeRC,mBAAS,EAAE,CAAC,2DAAD;AAfH,S;AAiBY,Q;;;;;;;;;;;;;;;;;;AC5BtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAiBaC,U;;;;;YAAAA;;;;yBAAAA,U;AAAU,O;AAAA,gBAPZ,CACP,4DADO,EAEP,wDAAYC,UAAZ,CAAuB,MAAvB,EAA+B,2DAA/B,CAFO,EAGP,4DAAcA,UAAd,CAAyB,yDAAzB,CAHO,CAOY;;;;0HAAVD,U,EAAU;AAAA,uBARN,kEAQM;AARO,kBAE1B,4DAF0B,EAEd,8DAFc,EAEd,kEAFc,CAQP;AANP,kBAIJ,kEAJI;AAMO,O;AAFE,K;;;;;sEAEZA,U,EAAU;cATtB,sDASsB;eATb;AACRH,sBAAY,EAAE,CAAC,kEAAD,CADN;AAERR,iBAAO,EAAE,CACP,4DADO,EAEP,wDAAYY,UAAZ,CAAuB,MAAvB,EAA+B,2DAA/B,CAFO,EAGP,4DAAcA,UAAd,CAAyB,yDAAzB,CAHO,CAFD;AAORjB,iBAAO,EAAE,CAAC,kEAAD;AAPD,S;AASa,Q;;;;;;;;;;;;;;;;;;ACjBvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGI;;AACE;;AACF;;;;;;AADE;;AAAA;;;;QDMOkB,a;AAKX,6BACUC,WADV,EAEUC,cAFV,EAEwC;AAAA;;AAD9B,aAAAD,WAAA,GAAAA,WAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AANV,aAAAC,iBAAA,GAAoB,KAAKF,WAAL,CAAiBE,iBAAjB,CAAmCC,IAAnC,CAClB,8DAAO,UAACC,KAAD;AAAA,iBAAW,CAAC,CAACA,KAAb;AAAA,SAAP,CADkB,CAApB;AAOI;;;;mCAEO;AACT,eAAKJ,WAAL,CAAiBK,UAAjB;AACA,eAAKJ,cAAL,CAAoBK,aAApB;AACD;;;;;;;uBAbUP,a,EAAa,yI,EAAA,kJ;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,uC;AAAA;AAAA;ACV1B;;AACE;;AAAI;;AAAmB;;AACvB;;AACE;;;;AAGF;;AACF;;;;AAJQ;;AAAA;;;;;;;;;;sEDOKA,a,EAAa;cALzB,uDAKyB;eALf;AACTV,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOagB,Y,GAGX,sBAAoBC,IAApB,EAAsC;AAAA;;AAAA;;AAAlB,WAAAA,IAAA,GAAAA,IAAA;AAFpB,WAAAC,QAAA,GAAW,sEAAYC,OAAZ,GAAsB,YAAjC;;AAIA,WAAAC,QAAA,GAAW;AAAA,eAAM,KAAI,CAACH,IAAL,CAAUI,GAAV,CAAc,KAAI,CAACH,QAAnB,CAAN;AAAA,OAAX;AAFwC,K;;;uBAH7BF,Y,EAAY,uH;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVM,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;ACPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,W;AAIX,2BAAoBC,KAApB,EAA+C;AAAA;;AAA3B,aAAAA,KAAA,GAAAA,KAAA;AAHpB,aAAAC,MAAA,GAAS,KAAKD,KAAL,CAAWE,MAAX,CAAkB,2DAAlB,CAAT;AACA,aAAAf,iBAAA,GAAoB,KAAKa,KAAL,CAAWE,MAAX,CAAkB,gEAAlB,CAApB;AAEiD;;;;qCAEpC;AACX,eAAKF,KAAL,CAAWG,QAAX,CAAoB,kEAApB;AACA,iBAAO,KAAKF,MAAZ;AACD;;;;;;;uBATUF,W,EAAW,yG;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVD,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACVxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAMM,UAAU,GAAG,aAAnB;AACA,QAAMC,iBAAiB,GAAG,qBAA1B;AACA,QAAMC,cAAc,GAAG,kBAAvB;;;;;;;;;;;;;;;;ACFP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIO,QAAMhB,UAAU,GAAG,iEAAa,uDAAb,CAAnB;AACA,QAAMiB,iBAAiB,GAAG,iEAC/B,8DAD+B,EAE/B,2DAF+B,CAA1B;AAIA,QAAMC,cAAc,GAAG,iEAC5B,2DAD4B,EAE5B,2DAF4B,CAAvB;;;;;;;;;;;;;;;;ACTP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,Y,GACX,sBAAoBC,QAApB,EAA+CC,YAA/C,EAA2E;AAAA;;AAAA;;AAAvD,WAAAD,QAAA,GAAAA,QAAA;AAA2B,WAAAC,YAAA,GAAAA,YAAA;AAE/C,WAAAC,WAAA,GAAc,mEAAa;AAAA,eACzB,MAAI,CAACF,QAAL,CAActB,IAAd,CACE,6DAAO,kDAAP,CADF,EAEE,iEAAU;AAAA,iBACR,MAAI,CAACuB,YAAL,CAAkBf,QAAlB,GAA6BR,IAA7B,CACE,2DAAI,UAACC,KAAD;AAAA,mBACF,kEAAkB;AAChBwB,qBAAO,EAAExB;AADO,aAAlB,CADE;AAAA,WAAJ,CADF,EAME,kEAAW,UAACyB,KAAD;AAAA,mBAAW,gDAAG,+DAAeA,KAAf,CAAH,CAAX;AAAA,WAAX,CANF,CADQ;AAAA,SAAV,CAFF,CADyB;AAAA,OAAb,CAAd;AAF6E,K;;;uBADlEL,Y,EAAY,6G,EAAA,4H;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY;;;;;sEAAZA,Y,EAAY;cADxB;AACwB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACTzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAYA,QAAMM,YAAY,GAAe;AAC/BC,UAAI,EAAE,EADyB;AAE/BC,YAAM,EAAE,KAFuB;AAG/BC,aAAO,EAAE,KAHsB;AAI/BJ,WAAK,EAAE;AAJwB,KAAjC;AAOA,QAAMK,YAAY,GAAG,kEACnBJ,YADmB,EAEnB,uDAAG,kDAAH,EAAe,UAACK,KAAD;AAAA,aAAY,MAAD,OAAC,CAAD,kBACrBL,YADqB,CAAC,EACV;AACfG,eAAO,EAAE;AADM,OADU,CAAZ;AAAA,KAAf,CAFmB,EAMnB,uDAAG,yDAAH,EAAsB,UAACE,KAAD;AAAA,UAAUP,OAAV,QAAUA,OAAV;AAAA,aAAyB,MAAD,OAAC,CAAD,kBACzCO,KADyC,CAAC,EACrC;AACRJ,YAAI,EAAEH,OADE;AAERK,eAAO,EAAE,KAFD;AAGRD,cAAM,EAAE;AAHA,OADqC,CAAzB;AAAA,KAAtB,CANmB,EAYnB,uDAAG,sDAAH,EAAmB,UAACG,KAAD;AAAA,UAAUP,OAAV,SAAUA,OAAV;AAAA,aAAyB,MAAD,OAAC,CAAD,kBACtCO,KADsC,CAAC,EAClC;AACRN,aAAK,EAAED;AADC,OADkC,CAAzB;AAAA,KAAnB,CAZmB,CAArB;;AAkBO,QAAMQ,OAAO,GAAG,SAAVA,OAAU,CAACD,KAAD,EAAoBE,MAApB;AAAA,aACrBH,YAAY,CAACC,KAAD,EAAQE,MAAR,CADS;AAAA,KAAhB;;;;;;;;;;;;;;;;;ACnCP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEA,QAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACH,KAAD;AAAA,aAAwBA,KAAK,CAACI,IAAN,CAAWnC,KAAnC;AAAA,KAAzB;;AAEO,QAAMoC,WAAW,GAAG,mEACzBF,gBADyB,EAEzB,UAACH,KAAD;AAAA,aAAuBA,KAAK,CAACJ,IAA7B;AAAA,KAFyB,CAApB;AAIA,QAAMU,kBAAkB,GAAG,mEAChCH,gBADgC,EAEhC,UAACH,KAAD;AAAA,aAAuBA,KAAK,CAACF,OAA7B;AAAA,KAFgC,CAA3B;AAIA,QAAMS,iBAAiB,GAAG,mEAC/BJ,gBAD+B,EAE/B,UAACH,KAAD;AAAA,aAAuBA,KAAK,CAACH,MAA7B;AAAA,KAF+B,CAA1B;AAIA,QAAMW,gBAAgB,GAAG,mEAC9BL,gBAD8B,EAE9B,UAACH,KAAD;AAAA,aAAuBA,KAAK,CAACN,KAA7B;AAAA,KAF8B,CAAzB;;;;;;;;;;;;;;;;AClBP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOae,e,GAGX,yBAAoBpC,IAApB,EAAsC;AAAA;;AAAA;;AAAlB,WAAAA,IAAA,GAAAA,IAAA;AAFpB,WAAAqC,WAAA,GAAc,sEAAYnC,OAAZ,GAAsB,eAApC;;AAIA,WAAAoC,WAAA,GAAc;AAAA,eAAM,MAAI,CAACtC,IAAL,CAAUI,GAAV,CAAc,MAAI,CAACiC,WAAnB,CAAN;AAAA,OAAd;AAFwC,K;;;uBAH7BD,e,EAAe,uH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACV/B,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASakC,c;AAGX,8BAAoBhC,KAApB,EAA+C;AAAA;;AAA3B,aAAAA,KAAA,GAAAA,KAAA;AAFpB,aAAAiC,SAAA,GAAY,KAAKjC,KAAL,CAAWE,MAAX,CAAkB,8DAAlB,CAAZ;AAEiD;;;;wCAEjC;AACd,eAAKF,KAAL,CAAWG,QAAX,CAAoB,qEAApB;AACA,iBAAO,KAAK8B,SAAZ;AACD;;;;;;;uBARUD,c,EAAc,yG;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVlC,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACT3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAMoC,aAAa,GAAG,gBAAtB;AACA,QAAMC,oBAAoB,GAAG,wBAA7B;AACA,QAAMC,iBAAiB,GAAG,qBAA1B;;;;;;;;;;;;;;;;ACFP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQO,QAAM7C,aAAa,GAAG,iEAAa,0DAAb,CAAtB;AACA,QAAM8C,oBAAoB,GAAG,iEAClC,iEADkC,EAElC,2DAFkC,CAA7B;AAIA,QAAMC,iBAAiB,GAAG,iEAC/B,8DAD+B,EAE/B,2DAF+B,CAA1B;;;;;;;;;;;;;;;;ACbP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaaC,e,GACX,yBACU7B,QADV,EAEU8B,eAFV,EAE0C;AAAA;;AAAA;;AADhC,WAAA9B,QAAA,GAAAA,QAAA;AACA,WAAA8B,eAAA,GAAAA,eAAA;AAGV,WAAAC,cAAA,GAAiB,mEAAa;AAAA,eAC5B,MAAI,CAAC/B,QAAL,CAActB,IAAd,CACE,6DAAO,qDAAP,CADF,EAEE,iEAAU;AAAA,iBACR,MAAI,CAACoD,eAAL,CAAqBT,WAArB,GAAmC3C,IAAnC,CACE,2DAAI,UAACsD,QAAD;AAAA,mBACF,qEAAqB;AACnB7B,qBAAO,EAAE6B;AADU,aAArB,CADE;AAAA,WAAJ,CADF,EAME,kEAAW,UAAC5B,KAAD;AAAA,mBAAW,gDAAG,kEAAkBA,KAAlB,CAAH,CAAX;AAAA,WAAX,CANF,CADQ;AAAA,SAAV,CAFF,CAD4B;AAAA,OAAb,CAAjB;AAFI,K;;;uBAJOyB,e,EAAe,6G,EAAA,kI;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe;;;;;sEAAfA,e,EAAe;cAD3B;AAC2B,Q;;;;;;;;;;;;;;;;;;;;;;;;ACb5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAYA,QAAMxB,YAAY,GAAkB;AAClCC,UAAI,EAAE,EAD4B;AAElCC,YAAM,EAAE,KAF0B;AAGlCC,aAAO,EAAE,KAHyB;AAIlCJ,WAAK,EAAE;AAJ2B,KAApC;AAOA,QAAM6B,eAAe,GAAG,kEACtB5B,YADsB,EAEtB,uDAAG,qDAAH,EAAkB;AAAA,aAAO,MAAD,OAAC,CAAD,kBACnBA,YADmB,CAAC,EACR;AACfG,eAAO,EAAE;AADM,OADQ,CAAP;AAAA,KAAlB,CAFsB,EAMtB,uDAAG,4DAAH,EAAyB,UAACE,KAAD;AAAA,UAAUP,OAAV,SAAUA,OAAV;AAAA,aAAyB,MAAD,OAAC,CAAD,kBAC5CO,KAD4C,CAAC,EACxC;AACRJ,YAAI,EAAEH,OADE;AAERK,eAAO,EAAE,KAFD;AAGRD,cAAM,EAAE;AAHA,OADwC,CAAzB;AAAA,KAAzB,CANsB,EAYtB,uDAAG,yDAAH,EAAsB,UAACG,KAAD;AAAA,UAAUP,OAAV,SAAUA,OAAV;AAAA,aAAyB,MAAD,OAAC,CAAD,kBACzCO,KADyC,CAAC,EACrC;AACRN,aAAK,EAAED;AADC,OADqC,CAAzB;AAAA,KAAtB,CAZsB,CAAxB;;AAkBO,QAAMQ,OAAO,GAAG,SAAVA,OAAU,CAACD,KAAD,EAAuBE,MAAvB;AAAA,aACrBqB,eAAe,CAACvB,KAAD,EAAQE,MAAR,CADM;AAAA,KAAhB;;;;;;;;;;;;;;;;;ACnCP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEA,QAAMsB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACxB,KAAD;AAAA,aAAwBA,KAAK,CAACI,IAAN,CAAWkB,QAAnC;AAAA,KAA5B;;AAEO,QAAMG,cAAc,GAAG,mEAC5BD,mBAD4B,EAE5B,UAACxB,KAAD;AAAA,aAA0BA,KAAK,CAACJ,IAAhC;AAAA,KAF4B,CAAvB;AAIA,QAAM8B,qBAAqB,GAAG,mEACnCF,mBADmC,EAEnC,UAACxB,KAAD;AAAA,aAA0BA,KAAK,CAACF,OAAhC;AAAA,KAFmC,CAA9B;AAIA,QAAM6B,oBAAoB,GAAG,mEAClCH,mBADkC,EAElC,UAACxB,KAAD;AAAA,aAA0BA,KAAK,CAACH,MAAhC;AAAA,KAFkC,CAA7B;AAIA,QAAM+B,mBAAmB,GAAG,mEACjCJ,mBADiC,EAEjC,UAACxB,KAAD;AAAA,aAA0BA,KAAK,CAACN,KAAhC;AAAA,KAFiC,CAA5B;;;;;;;;;;;;;;;;AClBP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGO,QAAMmC,WAAW,GAAG,CAAC,gEAAD,EAAe,sEAAf,CAApB;;;;;;;;;;;;;;;;ACDP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAUO,aAASC,YAAT,GAAqB;AAC1B,aAAO;AACL7D,aAAK,EAAE,4DADF;AAELqD,gBAAQ,EAAE;AAFL,OAAP;AAID;;;;;;;;;;;;;;;;;ACjBD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQO,QAAMS,gBAAgB,GAAG,mEAC9B,iEAD8B,EAE9B,uEAF8B,EAG9B,UAAC9D,KAAD,EAAQqD,QAAR,EAAwC;AACtC,aAAOrD,KAAK,CAAC+D,GAAN,CAAU,UAACC,IAAD,EAAU;AACzB,YAAMC,eAAe,GAAGZ,QAAQ,CAACa,IAAT,CACtB,UAACC,OAAD;AAAA,iBAAaA,OAAO,CAACH,IAAR,KAAiBA,IAAI,CAACtF,EAAnC;AAAA,SADsB,CAAxB;AAIA,eAAO,MAAP,OAAO,CAAP,kBACKsF,IADL,CAAO,EACE;AACPI,uBAAa,EAAGH,eAAe,IAAIA,eAAe,CAACI,MAApC,IAA+C;AADvD,SADF,CAAP;AAID,OATM,CAAP;AAUD,KAd6B,CAAzB;;;;;;;;;;;;;;;;ACNP;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAsB;AAC5CC,gBAAU,EAAE,KADgC;AAE5CjE,aAAO,EAAE;AAFmC,KAAvC;AAKP;;;;;;;AAOA;;;;;;;;;;;;;;;;;AClBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYiE,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAwB,eAAxB,CACmB,yDADnB,WAES,UAACC,GAAD;AAAA,aAASC,OAAO,CAAChD,KAAR,CAAc+C,GAAd,CAAT;AAAA,KAFT","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'casino-demo';\n}\n","<app-feed></app-feed>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\nimport { FeedModule } from './feed/feed.module';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot([]),\n    // todo: Add devtools only for dev.\n    StoreDevtoolsModule.instrument(),\n\n    FeedModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { feedReducers } from './store/reducer';\nimport { feedEffects } from './store/effect';\nimport { FeedComponent } from './feed/feed.component';\n\n@NgModule({\n  declarations: [FeedComponent],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature('feed', feedReducers),\n    EffectsModule.forFeature(feedEffects),\n  ],\n  exports: [FeedComponent],\n})\nexport class FeedModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { filter } from 'rxjs/operators';\nimport { GamesFacade } from '../games/services/games.facade';\nimport { JackpotsFacade } from '../jackpots/services/jackpots.facade';\n\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.scss'],\n})\nexport class FeedComponent implements OnInit {\n  gamesWithJackpot$ = this.gamesFacade.gamesWithJackpot$.pipe(\n    filter((games) => !!games)\n  );\n\n  constructor(\n    private gamesFacade: GamesFacade,\n    private jackpotsFacade: JackpotsFacade\n  ) {}\n\n  ngOnInit() {\n    this.gamesFacade.fetchGames();\n    this.jackpotsFacade.fetchJackpots();\n  }\n}\n","<div>\n  <h1>Games with Jackpots</h1>\n  <ul>\n    <li *ngFor=\"let game of gamesWithJackpot$ | async\">\n      {{ game?.name }} - {{ game?.jackpotAmount || 0 }}\n    </li>\n  </ul>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GamesBackend {\n  gamesUrl = environment.baseUrl + '/games.php';\n\n  constructor(private http: HttpClient) {}\n\n  getGames = () => this.http.get(this.gamesUrl);\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { selectGames } from '../store/selector';\nimport { fetchGames } from '../store/action';\nimport { GlobalState } from '../../../model';\nimport { gamesWithJackpot } from '../../store/selector';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GamesFacade {\n  games$ = this.store.select(selectGames);\n  gamesWithJackpot$ = this.store.select(gamesWithJackpot);\n\n  constructor(private store: Store<GlobalState>) {}\n\n  fetchGames() {\n    this.store.dispatch(fetchGames());\n    return this.games$;\n  }\n}\n","export const FetchGames = 'FETCH_GAMES';\nexport const FetchGamesSuccess = 'FETCH_GAMES_SUCCESS';\nexport const FetchGamesFail = 'FETCH_GAMES_FAIL';\n","import { createAction, props } from '@ngrx/store';\nimport { FetchGames, FetchGamesFail, FetchGamesSuccess } from './action-type';\nimport { Game } from '../model';\n\nexport const fetchGames = createAction(FetchGames);\nexport const fetchGamesSuccess = createAction(\n  FetchGamesSuccess,\n  props<{ payload: Game[] }>()\n);\nexport const fetchGamesFail = createAction(\n  FetchGamesFail,\n  props<{ payload: string }>()\n);\n\nexport type GamesActionType =\n  | typeof fetchGames\n  | typeof fetchGamesSuccess\n  | typeof fetchGamesFail;\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { GamesBackend } from '../services/games.backend';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { fetchGames, fetchGamesFail, fetchGamesSuccess } from './action';\nimport { of } from 'rxjs';\nimport { Game } from '../model';\n\n@Injectable()\nexport class GamesEffects {\n  constructor(private actions$: Actions, private gamesBackend: GamesBackend) {}\n\n  fetchGames$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(fetchGames),\n      switchMap(() =>\n        this.gamesBackend.getGames().pipe(\n          map((games: Game[]) =>\n            fetchGamesSuccess({\n              payload: games,\n            })\n          ),\n          catchError((error) => of(fetchGamesFail(error)))\n        )\n      )\n    )\n  );\n}\n","import { createReducer, on } from '@ngrx/store';\nimport { Game } from '../model';\nimport {\n  fetchGames,\n  fetchGamesFail,\n  fetchGamesSuccess,\n  GamesActionType,\n} from './action';\nimport { StateSlice } from '../../../model';\n\nexport type GamesState = StateSlice<Game>;\n\nconst initialState: GamesState = {\n  data: [],\n  loaded: false,\n  loading: false,\n  error: null,\n};\n\nconst gamesReducer = createReducer(\n  initialState,\n  on(fetchGames, (state) => ({\n    ...initialState,\n    loading: true,\n  })),\n  on(fetchGamesSuccess, (state, { payload }) => ({\n    ...state,\n    data: payload,\n    loading: false,\n    loaded: true,\n  })),\n  on(fetchGamesFail, (state, { payload }) => ({\n    ...state,\n    error: payload,\n  }))\n);\n\nexport const reducer = (state: GamesState, action: GamesActionType) =>\n  gamesReducer(state, action);\n","import { GamesState } from './reducer';\nimport { GlobalState } from '../../../model';\nimport { createSelector } from '@ngrx/store';\n\nconst selectGamesState = (state: GlobalState) => state.feed.games;\n\nexport const selectGames = createSelector(\n  selectGamesState,\n  (state: GamesState) => state.data\n);\nexport const selectGamesLoading = createSelector(\n  selectGamesState,\n  (state: GamesState) => state.loading\n);\nexport const selectGamesLoaded = createSelector(\n  selectGamesState,\n  (state: GamesState) => state.loaded\n);\nexport const selectGamesError = createSelector(\n  selectGamesState,\n  (state: GamesState) => state.error\n);\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JackpotsBackend {\n  jackpotsUrl = environment.baseUrl + '/jackpots.php';\n\n  constructor(private http: HttpClient) {}\n\n  getJackpots = () => this.http.get(this.jackpotsUrl);\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { selectJackpots } from '../store/selector';\nimport { fetchJackpots } from '../store/action';\nimport { GlobalState } from '../../../model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JackpotsFacade {\n  jackpots$ = this.store.select(selectJackpots);\n\n  constructor(private store: Store<GlobalState>) {}\n\n  fetchJackpots() {\n    this.store.dispatch(fetchJackpots());\n    return this.jackpots$;\n  }\n}\n","export const FetchJackpots = 'FETCH_JACKPOTS';\nexport const FetchJackpotsSuccess = 'FETCH_JACKPOTS_SUCCESS';\nexport const FetchJackpotsFail = 'FETCH_JACKPOTS_FAIL';\n","import { createAction, props } from '@ngrx/store';\nimport {\n  FetchJackpots,\n  FetchJackpotsFail,\n  FetchJackpotsSuccess,\n} from './action-type';\nimport { Jackpot } from '../model';\n\nexport const fetchJackpots = createAction(FetchJackpots);\nexport const fetchJackpotsSuccess = createAction(\n  FetchJackpotsSuccess,\n  props<{ payload: Jackpot[] }>()\n);\nexport const fetchJackpotsFail = createAction(\n  FetchJackpotsFail,\n  props<{ payload: string }>()\n);\n\nexport type JackpotsActionType =\n  | typeof fetchJackpots\n  | typeof fetchJackpotsSuccess\n  | typeof fetchJackpotsFail;\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { JackpotsBackend } from '../services/jackpots.backend';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport {\n  fetchJackpots,\n  fetchJackpotsFail,\n  fetchJackpotsSuccess,\n} from './action';\nimport { of } from 'rxjs';\nimport { Jackpot } from '../model';\n\n@Injectable()\nexport class JackpotsEffects {\n  constructor(\n    private actions$: Actions,\n    private jackpotsBackend: JackpotsBackend\n  ) {}\n\n  fetchJackpots$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(fetchJackpots),\n      switchMap(() =>\n        this.jackpotsBackend.getJackpots().pipe(\n          map((jackpots: Jackpot[]) =>\n            fetchJackpotsSuccess({\n              payload: jackpots,\n            })\n          ),\n          catchError((error) => of(fetchJackpotsFail(error)))\n        )\n      )\n    )\n  );\n}\n","import { createReducer, on } from '@ngrx/store';\nimport { Jackpot } from '../model';\nimport {\n  fetchJackpots,\n  fetchJackpotsFail,\n  fetchJackpotsSuccess,\n  JackpotsActionType,\n} from './action';\nimport { StateSlice } from '../../../model';\n\nexport type JackpotsState = StateSlice<Jackpot>;\n\nconst initialState: JackpotsState = {\n  data: [],\n  loaded: false,\n  loading: false,\n  error: null,\n};\n\nconst jackpotsReducer = createReducer(\n  initialState,\n  on(fetchJackpots, () => ({\n    ...initialState,\n    loading: true,\n  })),\n  on(fetchJackpotsSuccess, (state, { payload }) => ({\n    ...state,\n    data: payload,\n    loading: false,\n    loaded: true,\n  })),\n  on(fetchJackpotsFail, (state, { payload }) => ({\n    ...state,\n    error: payload,\n  }))\n);\n\nexport const reducer = (state: JackpotsState, action: JackpotsActionType) =>\n  jackpotsReducer(state, action);\n","import { JackpotsState } from './reducer';\nimport { GlobalState } from '../../../model';\nimport { createSelector } from '@ngrx/store';\n\nconst selectJackpotsState = (state: GlobalState) => state.feed.jackpots;\n\nexport const selectJackpots = createSelector(\n  selectJackpotsState,\n  (state: JackpotsState) => state.data\n);\nexport const selectJackpotsLoading = createSelector(\n  selectJackpotsState,\n  (state: JackpotsState) => state.loading\n);\nexport const selectJackpotsLoaded = createSelector(\n  selectJackpotsState,\n  (state: JackpotsState) => state.loaded\n);\nexport const selectJackpotsError = createSelector(\n  selectJackpotsState,\n  (state: JackpotsState) => state.error\n);\n","import { GamesEffects } from '../games/store/effect';\nimport { JackpotsEffects } from '../jackpots/store/effect';\n\nexport const feedEffects = [GamesEffects, JackpotsEffects];\n","import { ActionReducerMap } from '@ngrx/store';\n\nimport * as games from '../games/store/reducer';\nimport { GamesState } from '../games/store/reducer';\nimport * as jackpots from '../jackpots/store/reducer';\nimport { JackpotsState } from '../jackpots/store/reducer';\n\nexport interface FeedState {\n  games: GamesState;\n  jackpots: JackpotsState;\n}\n\nexport function feedReducers(): ActionReducerMap<FeedState, any> {\n  return {\n    games: games.reducer,\n    jackpots: jackpots.reducer,\n  };\n}\n","import { createSelector } from '@ngrx/store';\nimport { selectGames } from '../games/store/selector';\nimport { selectJackpots } from '../jackpots/store/selector';\nimport { Game } from '../games/model';\n\nexport interface GameWithJackpot extends Game {\n  jackpotAmount: number | null;\n}\nexport const gamesWithJackpot = createSelector(\n  selectGames,\n  selectJackpots,\n  (games, jackpots): GameWithJackpot[] => {\n    return games.map((game) => {\n      const gameWithJackpot = jackpots.find(\n        (jackpot) => jackpot.game === game.id\n      );\n\n      return {\n        ...game,\n        jackpotAmount: (gameWithJackpot && gameWithJackpot.amount) || null,\n      };\n    });\n  }\n);\n","import { EnvironmentsModel } from './environments.model';\n\n// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment: EnvironmentsModel = {\n  production: false,\n  baseUrl: 'http://stage.whgstage.com/front-end-test',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"]}